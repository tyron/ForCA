(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/tiago/web2py/applications/ForCA/models/models.py'
p4
sS'code'
p5
S"db = DAL('postgres://forca:xx@localhost/forca')\n\n#Tabela Alunos\ndb.define_table(\n\t\t'alunos',\n\t\t#Field('auth_user_id', db.auth_user,\n\t\t#\trequires = IS_IN_DB(db, db.auth_user.id, '')),\n\t\tField('email', 'string', length=64, required=True, notnull=True, unique=True,\n\t\t\trequires = IS_EMAIL()),\n\t\tField('full_name', 'string', length=128, required=True, notnull=True),\n\t\tField('short_name', 'string', length=32),\n\t\tField('password', 'password', length=32, required=True, notnull=True),\n\t\tField('grade', 'integer', length=1,\n\t\t\trequires = IS_INT_IN_RANGE(1,5)),\n\t\tField('picture', 'upload'),\n\t\tmigrate='alunos.table')\n\n#Tabela Disciplinas\ndb.define_table(\n\t\t'disciplinas',\n\t\tField('name', 'string', length=128, required=True, notnull=True),\n\t\tField('short_name', 'string', length=32),\n\t\tField('code', 'string', length=8, required=True, notnull=True, unique=True),\n\t\tmigrate='disciplinas.table')\n\n#Tabela Professores\ndb.define_table(\n\t\t'professores',\n\t\t#Field('auth_user_id', db.auth_user,\n\t\t#\trequires = IS_IN_DB(db, db.auth_user.id, '')),\n\t\tField('email', 'string', length=64, required=True, notnull=True, unique=True,\n\t\t\trequires = IS_EMAIL()),\n\t\tField('full_name', 'string', length=128, required=True, notnull=True),\n\t\tField('short_name', 'string', length=32),\n\t\tField('password', 'password', length=32),\n\t\tField('grade', 'integer', length=1,\n\t\t\trequires = IS_INT_IN_RANGE(1,5)),\n\t\tField('picture', 'upload'),\n\t\tmigrate='professores.table')\n\n#Tabela Avaliacoes\ndb.define_table(\n\t\t'avaliacoes',\n\t\tField('aluno_id', db.alunos, required=True, notnull=True,\n\t\t\twritable = False, readable = False,\n\t\t\trequires = IS_IN_DB(db, db.alunos.id, '')),\n\t\tField('disciplina_id', db.disciplinas, required=True, notnull=True,\n\t\t\twritable = False, readable = False,\n\t\t\trequires = IS_IN_DB(db, db.disciplinas.id, '')),\n\t\tField('professor_id', db.professores, required=True, notnull=True,\n\t\t\twritable = False, readable = False,\n\t\t\trequires = IS_IN_DB(db, db.professores.id, '')),\n\t\tField('year', 'integer', length=4,\n\t\t\trequires = IS_INT_IN_RANGE(1970,9999)),\n\t\tField('semester', 'boolean'),\n\t\tField('grade', 'integer', length=1, required=True, notnull=True,\n\t\t\trequires = IS_INT_IN_RANGE(1,5)),\n\t\tField('comment', 'string', length=4096),\n\t\tField('karma', 'integer', length=8, default='0'),\n\t\tField('reply', 'string', length=4096),\n\t\tmigrate='avaliacoes.table')\n\n#Tabela Karma\ndb.define_table(\n\t\t'karmas',\n\t\tField('aluno_id', db.alunos, required=True, notnull=True,\n\t\t\trequires = IS_IN_DB(db, db.alunos.id, '')),\n\t\tField('avaliacao_id', db.avaliacoes, required=True, notnull=True,\n\t\t\trequires = IS_IN_DB(db, db.avaliacoes.id, '')),\n\t\tField('value', 'boolean'),\n\t\tmigrate='karmas.table')\n\n"
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__module__'
p11
S"'psycopg2'"
p12
sS'__getslice__'
p13
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p14
sS'__str__'
p15
S"<method-wrapper '__str__' of ProgrammingError object>"
p16
sS'__reduce__'
p17
S'<built-in method __reduce__ of ProgrammingError object>'
p18
sS'__dict__'
p19
S'{\'cursor\': <cursor object at 0xdab164c; closed: 0>, \'pgcode\': \'42P07\', \'pgerror\': \'ERROR:  relation "alunos" already exists\\n\'}'
p20
sS'__sizeof__'
p21
S'<built-in method __sizeof__ of ProgrammingError object>'
p22
sS'__weakref__'
p23
S'None'
p24
sS'__init__'
p25
S"<method-wrapper '__init__' of ProgrammingError object>"
p26
sS'__setattr__'
p27
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p28
sS'__reduce_ex__'
p29
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p30
sS'__new__'
p31
S'<built-in method __new__ of type object>'
p32
sS'__format__'
p33
S'<built-in method __format__ of ProgrammingError object>'
p34
sS'__class__'
p35
S"<class 'psycopg2.ProgrammingError'>"
p36
sS'pgerror'
p37
S'\'ERROR:  relation "alunos" already exists\\n\''
p38
sS'__doc__'
p39
S"'Error related to database programming (SQL error, table not found etc).'"
p40
sS'__getitem__'
p41
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p42
sS'__setstate__'
p43
S'<built-in method __setstate__ of ProgrammingError object>'
p44
sS'__getattribute__'
p45
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p46
sS'args'
p47
S'(\'relation "alunos" already exists\\n\',)'
p48
sS'__subclasshook__'
p49
S'<built-in method __subclasshook__ of type object>'
p50
sS'pgcode'
p51
S"'42P07'"
p52
sS'__unicode__'
p53
S'<built-in method __unicode__ of ProgrammingError object>'
p54
sS'cursor'
p55
S'<cursor object at 0xdab164c; closed: 0>'
p56
sS'__delattr__'
p57
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p58
sS'__repr__'
p59
S"<method-wrapper '__repr__' of ProgrammingError object>"
p60
sS'__hash__'
p61
S"<method-wrapper '__hash__' of ProgrammingError object>"
p62
ssS'evalue'
p63
S'relation "alunos" already exists\n'
p64
sS'request'
p65
(dp66
S'function'
p67
S"'index'"
p68
sS'body'
p69
S'<cStringIO.StringO object>'
p70
sS'wsgi'
p71
S"<Storage {'start_response': <function <lambda> a...ING': 'gzip,deflate', 'HTTP_KEEP_ALIVE': '115'}}>"
p72
sS'extension'
p73
S"'html'"
p74
sS'vars'
p75
S'<Storage {}>'
p76
sS'cid'
p77
S'None'
p78
sS'url'
p79
S"'/ForCA/default/index'"
p80
sg47
S'[]'
p81
sS'controller'
p82
S"'default'"
p83
sS'cookies'
p84
S"<SimpleCookie: session_id_ForCA='127-0-0-1-8bb1b...'127-0-0-1-3835ea12-86a2-4dae-95dc-fe0b3f86823c'>"
p85
sS'application'
p86
S"'ForCA'"
p87
sS'ajax'
p88
S'False'
p89
sS'client'
p90
S"'127.0.0.1'"
p91
sS'env'
p92
S"<Storage {'http_user_agent': 'Mozilla/5.0 (X11; ...ce': False, 'path_info': '/ForCA/default/index'}>"
p93
sS'raw_args'
p94
S'None'
p95
sS'get_vars'
p96
S'<Storage {}>'
p97
sS'folder'
p98
S"'/home/tiago/web2py/applications/ForCA/'"
p99
sS'now'
p100
S'datetime.datetime(2010, 9, 1, 0, 41, 59, 460725)'
p101
sS'post_vars'
p102
S'<Storage {}>'
p103
ssS'frames'
p104
(lp105
(dp106
S'file'
p107
S'/home/tiago/web2py/gluon/restricted.py'
p108
sS'dump'
p109
(dp110
S'environment'
p111
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p112
sS'ccode'
p113
S'<code object <module> at 0xdb962a8, file "/home/...2py/applications/ForCA/models/models.py", line 1>'
p114
ssS'lnum'
p115
I186
sS'lines'
p116
(dp117
I181
S'        if type(code) == types.CodeType:'
p118
sI182
S'            ccode = code'
p119
sI183
S'        else:'
p120
sI184
S'            ccode = compile2(code,layer)'
p121
sI185
S''
sI186
S'        exec ccode in environment'
p122
sI187
S'    except HTTP:'
p123
sI188
S'        raise'
p124
sI189
S'    except Exception:'
p125
sI190
S'        # XXX Show exception in Wing IDE if running in debugger'
p126
ssS'call'
p127
S'(code="db = DAL(\'postgres://forca:xx@localhost/forca\')\\n...(\'value\', \'boolean\'),\\n\\t\\tmigrate=\'karmas.table\')\\n\\n", environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, \'CRYPT\': <class \'gluon.validators.CRYPT\'>, ...}, layer=\'/home/tiago/web2py/applications/ForCA/models/models.py\')'
p128
sS'func'
p129
S'restricted'
p130
sa(dp131
g107
S'/home/tiago/web2py/applications/ForCA/models/models.py'
p132
sg109
(dp133
S'migrate'
p134
S'undefined'
p135
ssg115
I16
sg116
(dp136
I11
S"\t\tField('short_name', 'string', length=32),"
p137
sI12
S"\t\tField('password', 'password', length=32, required=True, notnull=True),"
p138
sI13
S"\t\tField('grade', 'integer', length=1,"
p139
sI14
S'\t\t\trequires = IS_INT_IN_RANGE(1,5)),'
p140
sI15
S"\t\tField('picture', 'upload'),"
p141
sI16
S"\t\tmigrate='alunos.table')"
p142
sI17
S''
sI18
S'#Tabela Disciplinas'
p143
sI19
S'db.define_table('
p144
sI20
S"\t\t'disciplinas',"
p145
ssg127
S'()'
p146
sg129
S'<module>'
p147
sa(dp148
g107
S'/home/tiago/web2py/gluon/sql.py'
p149
sg109
(dp150
S't._create'
p151
S"<bound method Table._create of <Table {'picture'...], 'id': <gluon.sql.Field object at 0xd77952c>}>>"
p152
sS'migrate'
p153
S"'alunos.table'"
p154
sS't'
S"<Table {'picture': <gluon.sql.Field object at 0x...[], 'id': <gluon.sql.Field object at 0xd77952c>}>"
p155
sS'fake_migrate'
p156
g89
ssg115
I1359
sg116
(dp157
I1354
S'        t._create_references()'
p158
sI1355
S''
sI1356
S'        if migrate:'
p159
sI1357
S'            sql_locker.acquire()'
p160
sI1358
S'            try:'
p161
sI1359
S'                t._create(migrate=migrate, fake_migrate=fake_migrate)'
p162
sI1360
S'            finally:'
p163
sI1361
S'                sql_locker.release()'
p164
sI1362
S'        else:'
p165
sI1363
S'            t._dbt = None'
p166
ssg127
S"(self=<SQLDB {'_connection': <connection object at 0xd...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>, tablename='alunos', *fields=(<gluon.sql.Field object>, <gluon.sql.Field object>, <gluon.sql.Field object>, <gluon.sql.Field object>, <gluon.sql.Field object>, <gluon.sql.Field object>), **args={'migrate': 'alunos.table'})"
p167
sg129
S'define_table'
p168
sa(dp169
g107
S'/home/tiago/web2py/gluon/sql.py'
p170
sg109
(dp171
S'self._db._execute'
p172
S'<function <lambda>>'
p173
sS'query'
p174
S"'CREATE TABLE alunos(\\n    id SERIAL PRIMARY KEY,\\n...L,\\n    grade INTEGER,\\n    picture VARCHAR(512)\\n);'"
p175
sS'self'
p176
S"<Table {'picture': <gluon.sql.Field object at 0x...[], 'id': <gluon.sql.Field object at 0xd77952c>}>"
p177
sS'self._db'
p178
S"<SQLDB {'_connection': <connection object at 0xd...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>"
p179
ssg115
I1800
sg116
(dp180
I1795
S'                # pre-create table auto inc code (if needed)'
p181
sI1796
S'                tmp_seqname=gen_ingres_sequencename(self._tablename)'
p182
sI1797
S'                query=query.replace(INGRES_SEQNAME, tmp_seqname)'
p183
sI1798
S"                self._db._execute('create sequence %s' % tmp_seqname)"
p184
sI1799
S'            if not fake_migrate:'
p185
sI1800
S'                self._db._execute(query)'
p186
sI1801
S"                if self._db._dbname in ['oracle']:"
p187
sI1802
S'                    t = self._tablename'
p188
sI1803
S"                    self._db._execute('CREATE SEQUENCE %s START WITH 1 INCREMENT BY 1 NOMAXVALUE;'"
p189
sI1804
S'                                   % self._sequence_name)'
p190
ssg127
S"(self=<Table {'picture': <gluon.sql.Field object at 0x...[], 'id': <gluon.sql.Field object at 0xd77952c>}>, migrate='alunos.table', fake_migrate=False)"
p191
sg129
S'_create'
p192
sa(dp193
g107
S'/home/tiago/web2py/gluon/sql.py'
p194
sg109
(dp195
S'a'
S"('CREATE TABLE alunos(\\n    id SERIAL PRIMARY KEY,\\n...L,\\n    grade INTEGER,\\n    picture VARCHAR(512)\\n);',)"
p196
sS'b'
S'{}'
p197
sS'self._execute'
p198
S'<function <lambda>>'
p199
sS'self'
p200
S"<SQLDB {'_connection': <connection object at 0xd...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>"
p201
sS'self._cursor'
p202
S'<cursor object at 0xdab164c; closed: 0>'
p203
sS'self._cursor.execute'
p204
S'<built-in method execute of psycopg2._psycopg.cursor object>'
p205
ssg115
I1010
sg116
(dp206
I1005
S'                "dbname=\'%s\' user=\'%s\' host=\'%s\' port=%s password=\'%s\'"\\'
p207
sI1006
S'                 % (db, user, host, port, passwd)'
p208
sI1007
S'            self._pool_connection(lambda : psycopg2.connect(msg))'
p209
sI1008
S"            self._connection.set_client_encoding('UTF8')"
p210
sI1009
S'            self._cursor = self._connection.cursor()'
p211
sI1010
S'            self._execute = lambda *a, **b: self._cursor.execute(*a, **b)'
p212
sI1011
S"            query = 'BEGIN;'"
p213
sI1012
S"            self['_lastsql'] = query"
p214
sI1013
S'            self._execute(query)'
p215
sI1014
S'            self._execute("SET CLIENT_ENCODING TO \'UNICODE\';")  # ## not completely sure but should work'
p216
ssg127
S"(*a=('CREATE TABLE alunos(\\n    id SERIAL PRIMARY KEY,\\n...L,\\n    grade INTEGER,\\n    picture VARCHAR(512)\\n);',), **b={})"
p217
sg129
S'<lambda>'
p218
sasS'pyver'
p219
S'Python 2.6.5: /usr/bin/python'
p220
sS'session'
p221
(dp222
S'_formkey[alunos_create]'
p223
S"'0aaa9f1f-532b-4364-8c3d-31bbff8fd933'"
p224
sS'auth'
p225
S'None'
p226
ssS'etype'
p227
S"<class 'psycopg2.ProgrammingError'>"
p228
sS'date'
p229
S'Wed Sep  1 00:41:59 2010'
p230
sS'response'
p231
(dp232
S'status'
p233
S'200'
p234
sg69
S'<cStringIO.StringO object>'
p235
sg84
S"<SimpleCookie: session_id_ForCA='127-0-0-1-8bb1be4f-ac83-4bcd-af59-35995a2d4b04'>"
p236
sS'_vars'
p237
S'None'
p238
sS'title'
p239
S"'ForCA'"
p240
sS'session_file'
p241
S"<open file '/home/tiago/web2py/applications/ForC...bb1be4f-ac83-4bcd-af59-35995a2d4b04', mode 'rb+'>"
p242
sS'flash'
p243
S"''"
p244
sS'_custom_rollback'
p245
S'None'
p246
sS'session_id'
p247
S"'127-0-0-1-8bb1be4f-ac83-4bcd-af59-35995a2d4b04'"
p248
sS'headers'
p249
S"<Storage {'Expires': 'Wed, 01 Sep 2010 03:41:59 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p250
sS'meta'
p251
S"<Storage {'keywords': 'bla bla bla', 'description': 'describe your app', 'author': 'you'}>"
p252
sS'session_filename'
p253
S"'/home/tiago/web2py/applications/ForCA/sessions/127-0-0-1-8bb1be4f-ac83-4bcd-af59-35995a2d4b04'"
p254
sS'postprocessing'
p255
S'[]'
p256
sS'menu'
p257
S"[(<lazyT 'Index'>, False, '/ForCA/default/index', []), (<lazyT 'Edit'>, False, '/admin/default/design/ForCA', [(<lazyT 'Controller'>, False, '/admin/default/edit/ForCA/controllers/default.py'), (<lazyT 'View'>, False, '/admin/default/edit/ForCA/views/default/index.html'), (<lazyT 'Layout'>, False, '/admin/default/edit/ForCA/views/layout.html'), (<lazyT 'Stylesheet'>, False, '/admin/default/edit/ForCA/static/base.css'), (<lazyT 'DB Model'>, False, '/admin/default/edit/ForCA/models/db.py'), (<lazyT 'Menu Model'>, False, '/admin/default/edit/ForCA/models/menu.py'), (<lazyT 'Database'>, False, '/ForCA/appadmin/index')])]"
p258
sS'_view_environment'
p259
S"{'A': <class 'gluon.html.A'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, 'DAL': <function DAL>, ...}"
p260
sS'subtitle'
p261
S"<lazyT 'customize me!'>"
p262
sS'session_id_name'
p263
S"'session_id_ForCA'"
p264
sS'_custom_commit'
p265
S'None'
p266
sS'_caller'
p267
S'<function <lambda>>'
p268
sS'files'
p269
S'[]'
p270
sS'view'
p271
S"'default/index.html'"
p272
ssS'locals'
p273
(dp274
S'a'
S"('CREATE TABLE alunos(\\n    id SERIAL PRIMARY KEY,\\n...L,\\n    grade INTEGER,\\n    picture VARCHAR(512)\\n);',)"
p275
sS'self'
p276
S"<SQLDB {'_connection': <connection object at 0xd...me': 'TIME'}, '_migrate': True, '_pool_size': 0}>"
p277
sS'b'
g197
sssS'traceback'
p278
S'Traceback (most recent call last):\n  File "/home/tiago/web2py/gluon/restricted.py", line 186, in restricted\n    exec ccode in environment\n  File "/home/tiago/web2py/applications/ForCA/models/models.py", line 16, in <module>\n    migrate=\'alunos.table\')\n  File "/home/tiago/web2py/gluon/sql.py", line 1359, in define_table\n    t._create(migrate=migrate, fake_migrate=fake_migrate)\n  File "/home/tiago/web2py/gluon/sql.py", line 1800, in _create\n    self._db._execute(query)\n  File "/home/tiago/web2py/gluon/sql.py", line 1010, in <lambda>\n    self._execute = lambda *a, **b: self._cursor.execute(*a, **b)\nProgrammingError: relation "alunos" already exists\n\n'
p279
s.