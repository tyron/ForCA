(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/tiago/Desktop/web2py/web2py/applications/forca/models/models.py'
p4
sS'code'
p5
S'# coding: utf8\n"""\njust copy paste this code into your model and replace dbOBJECT to something\nyou prefer or what is used in your code, another thing that should be known is that\nthis code still cannot distinguish what exactly should be in reference title - name\nwhen you use generic appadmin so please remove all fiealds you don\'t need not require \n"""\n"""\ndatabase class object creation\n"""\ndbOBJECT = SQLDB("postgres://web2py:xx@localhost/web2py")\n\n"""\nTable definition\n"""\ndbOBJECT.define_table("aluno",\n      SQLField("email", "VARCHAR", length=64, notnull=True, default=None),\n      SQLField("name", "VARCHAR", length=64, default=None),\n      SQLField("password", "VARCHAR", length=64, default=None))\n\n\n"""\nTable definition\n"""\ndbOBJECT.define_table("professor",\n      SQLField("email", "VARCHAR", length=64, notnull=True, default=None),\n      SQLField("short_name", "VARCHAR", length=32, notnull=True, default=None),\n      SQLField("long_name", "VARCHAR", length=128, notnull=True, default=None))\n\n\n"""\nTable definition\n"""\ndbOBJECT.define_table("avaliacao",\n      SQLField("aluno_id", dbOBJECT.aluno),\n      SQLField("professor_id", dbOBJECT.professor),\n      SQLField("disciplina_id", dbOBJECT.disciplina),\n      SQLField("year", "INTEGER", default=None),\n      SQLField("semester", "INTEGER", default=None),\n      SQLField("grade", "INTEGER", notnull=True, default=None),\n      SQLField("geral_grade", "INTEGER", notnull=True, default=None),\n      SQLField("geral_comment", "VARCHAR", length=2048, default=None),\n      SQLField("didatica_grade", "INTEGER", notnull=True, default=None),\n      SQLField("didatica_comment", "VARCHAR", length=2048, default=None),\n      SQLField("dinamica_grade", "INTEGER", notnull=True, default=None),\n      SQLField("dinamica_comment", "VARCHAR", length=2048, default=None),\n      SQLField("avaliacao_grade", "INTEGER", notnull=True, default=None),\n      SQLField("avaliacao_comment", "VARCHAR", length=2048, default=None),\n      SQLField("disponibilidade_grade", "INTEGER", notnull=True, default=None),\n      SQLField("disponibilidade_comment", "VARCHAR", length=2048, default=None),\n      SQLField("resposta", "VARCHAR", length=2048, default=None))\n\n\n"""\nTable definition\n"""\ndbOBJECT.define_table("disciplina",\n      SQLField("name", "VARCHAR", length=128, notnull=True, default=None),\n      SQLField("code", "VARCHAR", length=8, notnull=True, default=None))\n\n\n"""\nRelations between tables (remove fields you don\'t need from requires)\n"""\ndbOBJECT.avaliacao.aluno_id.requires=IS_IN_DB(dbOBJECT, \'aluno.id\',\'aluno.email\',\'aluno.name\',\'aluno.password\')\ndbOBJECT.avaliacao.professor_id.requires=IS_IN_DB(dbOBJECT, \'professor.id\',\'professor.email\',\'professor.short_name\',\'professor.long_name\')\ndbOBJECT.avaliacao.disciplina_id.requires=IS_IN_DB(dbOBJECT, \'disciplina.id\',\'disciplina.name\',\'disciplina.code\')\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__getslice__'
p11
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object at 0x3a490c8>"
p12
sS'text'
p13
S'None'
p14
sS'__str__'
p15
S"<method-wrapper '__str__' of exceptions.SyntaxError object at 0x3a490c8>"
p16
sS'__reduce__'
p17
S'<built-in method __reduce__ of exceptions.SyntaxError object at 0x3a490c8>'
p18
sS'__dict__'
p19
S'{}'
p20
sS'__sizeof__'
p21
S'<built-in method __sizeof__ of exceptions.SyntaxError object at 0x3a490c8>'
p22
sS'__init__'
p23
S"<method-wrapper '__init__' of exceptions.SyntaxError object at 0x3a490c8>"
p24
sS'__setattr__'
p25
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object at 0x3a490c8>"
p26
sS'__reduce_ex__'
p27
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object at 0x3a490c8>'
p28
sS'__new__'
p29
S'<built-in method __new__ of type object at 0x812460>'
p30
sS'__format__'
p31
S'<built-in method __format__ of exceptions.SyntaxError object at 0x3a490c8>'
p32
sS'__class__'
p33
S"<type 'exceptions.SyntaxError'>"
p34
sS'filename'
p35
S'None'
p36
sS'lineno'
p37
S'None'
p38
sS'msg'
p39
S"'Field: unknown field type: VARCHAR for email'"
p40
sS'__doc__'
p41
S"'Invalid syntax.'"
p42
sS'__getitem__'
p43
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object at 0x3a490c8>"
p44
sS'__setstate__'
p45
S'<built-in method __setstate__ of exceptions.SyntaxError object at 0x3a490c8>'
p46
sS'__getattribute__'
p47
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object at 0x3a490c8>"
p48
sS'print_file_and_line'
p49
S'None'
p50
sS'args'
p51
S"('Field: unknown field type: VARCHAR for email',)"
p52
sS'__subclasshook__'
p53
S'<built-in method __subclasshook__ of type object at 0x812460>'
p54
sS'offset'
p55
S'None'
p56
sS'__unicode__'
p57
S'<built-in method __unicode__ of exceptions.SyntaxError object at 0x3a490c8>'
p58
sS'__delattr__'
p59
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object at 0x3a490c8>"
p60
sS'__repr__'
p61
S"<method-wrapper '__repr__' of exceptions.SyntaxError object at 0x3a490c8>"
p62
sS'__hash__'
p63
S"<method-wrapper '__hash__' of exceptions.SyntaxError object at 0x3a490c8>"
p64
ssS'evalue'
p65
S'Field: unknown field type: VARCHAR for email'
p66
sS'request'
p67
(dp68
S'function'
p69
S"'index'"
p70
sS'body'
p71
S'<cStringIO.StringO object at 0x3759810>'
p72
sS'wsgi'
p73
S"<Storage {'start_response': <function <lambda> a...ING': 'gzip,deflate', 'HTTP_KEEP_ALIVE': '115'}}>"
p74
sS'extension'
p75
S"'html'"
p76
sS'vars'
p77
S'<Storage {}>'
p78
sS'cid'
p79
S'None'
p80
sS'url'
p81
S"'/forca/default/index'"
p82
sg51
S'[]'
p83
sS'controller'
p84
S"'default'"
p85
sS'cookies'
p86
S"<SimpleCookie: session_id_admin='127-0-0-1-dfed7...'127-0-0-1-f4e943e8-6071-4511-a68e-3738716bdadb'>"
p87
sS'application'
p88
S"'forca'"
p89
sS'ajax'
p90
S'False'
p91
sS'client'
p92
S"'127.0.0.1'"
p93
sS'env'
p94
S"<Storage {'http_user_agent': 'Mozilla/5.0 (X11; ...ce': False, 'path_info': '/forca/default/index'}>"
p95
sS'raw_args'
p96
S'None'
p97
sS'get_vars'
p98
S'<Storage {}>'
p99
sS'folder'
p100
S"'/home/tiago/Desktop/web2py/web2py/applications/forca/'"
p101
sS'now'
p102
S'datetime.datetime(2010, 8, 25, 17, 27, 58, 491483)'
p103
sS'post_vars'
p104
S'<Storage {}>'
p105
ssS'frames'
p106
(lp107
(dp108
S'file'
p109
S'/home/tiago/Desktop/web2py/web2py/gluon/restricted.py'
p110
sS'dump'
p111
(dp112
S'environment'
p113
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p114
sS'ccode'
p115
S'<code object <module> at 0x3a49648, file "/home/...2py/applications/forca/models/models.py", line 7>'
p116
ssS'lnum'
p117
I186
sS'lines'
p118
(dp119
I181
S'        if type(code) == types.CodeType:'
p120
sI182
S'            ccode = code'
p121
sI183
S'        else:'
p122
sI184
S'            ccode = compile2(code,layer)'
p123
sI185
S''
sI186
S'        exec ccode in environment'
p124
sI187
S'    except HTTP:'
p125
sI188
S'        raise'
p126
sI189
S'    except Exception:'
p127
sI190
S'        # XXX Show exception in Wing IDE if running in debugger'
p128
ssS'call'
p129
S'(code=\'# coding: utf8\\n"""\\njust copy paste this code int...ciplina.id\\\',\\\'disciplina.name\\\',\\\'disciplina.code\\\')\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, \'CRYPT\': <class \'gluon.validators.CRYPT\'>, ...}, layer=\'/home/tiago/Desktop/web2py/web2py/applications/forca/models/models.py\')'
p130
sS'func'
p131
S'restricted'
p132
sa(dp133
g109
S'/home/tiago/Desktop/web2py/web2py/applications/forca/models/models.py'
p134
sg111
(dp135
S'SQLField'
p136
S"<class 'gluon.sql.Field'>"
p137
sS'default'
p138
S'undefined'
p139
sS'length'
p140
g139
sS'builtinNone'
p141
S'None'
p142
ssg117
I19
sg118
(dp143
I14
S'Table definition'
p144
sI15
S'"""'
p145
sI16
S'dbOBJECT.define_table("aluno",'
p146
sI17
S'      SQLField("email", "VARCHAR", length=64, notnull=True, default=None),'
p147
sI18
S'      SQLField("name", "VARCHAR", length=64, default=None),'
p148
sI19
S'      SQLField("password", "VARCHAR", length=64, default=None))'
p149
sI20
S''
sI21
S''
sI22
S'"""'
p150
sI23
S'Table definition'
p151
ssg129
S'()'
p152
sg131
S'<module>'
p153
sa(dp154
g109
S'/home/tiago/Desktop/web2py/web2py/gluon/sql.py'
p155
sg111
(dp156
S't._create'
p157
S"<bound method Table._create of <Table {'ALL': <g...], 'id': <gluon.sql.Field object at 0x38882d0>}>>"
p158
sS'migrate'
p159
S'True'
p160
sS't'
S"<Table {'ALL': <gluon.sql.SQLALL object at 0x388...[], 'id': <gluon.sql.Field object at 0x38882d0>}>"
p161
sS'fake_migrate'
p162
g91
ssg117
I1359
sg118
(dp163
I1354
S'        t._create_references()'
p164
sI1355
S''
sI1356
S'        if migrate:'
p165
sI1357
S'            sql_locker.acquire()'
p166
sI1358
S'            try:'
p167
sI1359
S'                t._create(migrate=migrate, fake_migrate=fake_migrate)'
p168
sI1360
S'            finally:'
p169
sI1361
S'                sql_locker.release()'
p170
sI1362
S'        else:'
p171
sI1363
S'            t._dbt = None'
p172
ssg129
S"(self=<SQLDB {'_connection': <connection object at 0x3...0x38882d0>}>, '_migrate': True, '_pool_size': 0}>, tablename='aluno', *fields=(<gluon.sql.Field object at 0x3888f90>, <gluon.sql.Field object at 0x38885d0>, <gluon.sql.Field object at 0x3888990>), **args={})"
p173
sg131
S'define_table'
p174
sa(dp175
g109
S'/home/tiago/Desktop/web2py/web2py/gluon/sql.py'
p176
sg111
(dp177
S'field.type'
p178
S"'VARCHAR'"
p179
sS'field'
p180
S'<gluon.sql.Field object at 0x3888f90>'
p181
sS'field.name'
p182
S"'email'"
p183
ssg117
I1734
sg118
(dp184
I1729
S"                precision, scale = [int(x) for x in field.type[8:-1].split(',')]"
p185
sI1730
S'                ftype = self._db._translator[field.type[:7]] % \\'
p186
sI1731
S'                    dict(precision=precision, scale=scale)'
p187
sI1732
S'            elif not field.type in self._db._translator:'
p188
sI1733
S"                raise SyntaxError, 'Field: unknown field type: %s for %s' % \\"
p189
sI1734
S'                    (field.type, field.name)'
p190
sI1735
S'            else:'
p191
sI1736
S'                ftype = self._db._translator[field.type]\\'
p192
sI1737
S'                     % dict(length=field.length)'
p193
sI1738
S"            if not isinstance(field.type, SQLCustomType) and not field.type.startswith('id') and not field.type.startswith('reference'):"
p194
ssg129
S"(self=<Table {'ALL': <gluon.sql.SQLALL object at 0x388...[], 'id': <gluon.sql.Field object at 0x38882d0>}>, migrate=True, fake_migrate=False)"
p195
sg131
S'_create'
p196
sasS'pyver'
p197
S'Python 2.6.4: /usr/bin/python'
p198
sS'session'
p199
(dp200
S'auth'
p201
S'None'
p202
ssS'etype'
p203
S"<type 'exceptions.SyntaxError'>"
p204
sS'date'
p205
S'Wed Aug 25 17:27:58 2010'
p206
sS'response'
p207
(dp208
S'status'
p209
S'200'
p210
sg71
S'<cStringIO.StringO object at 0x3a41a08>'
p211
sg86
S"<SimpleCookie: session_id_forca='127-0-0-1-b9768198-37ac-4906-af35-3d790b1f621a'>"
p212
sS'_vars'
p213
S'None'
p214
sS'title'
p215
S"'forca'"
p216
sS'session_file'
p217
S"<open file '/home/tiago/Desktop/web2py/web2py/ap...4906-af35-3d790b1f621a', mode 'rb+' at 0x35868b0>"
p218
sS'flash'
p219
S"''"
p220
sS'_custom_rollback'
p221
S'None'
p222
sS'session_id'
p223
S"'127-0-0-1-b9768198-37ac-4906-af35-3d790b1f621a'"
p224
sS'headers'
p225
S"<Storage {'Expires': 'Wed, 25 Aug 2010 20:27:58 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p226
sS'meta'
p227
S"<Storage {'keywords': 'bla bla bla', 'description': 'describe your app', 'author': 'you'}>"
p228
sS'session_filename'
p229
S"'/home/tiago/Desktop/web2py/web2py/applications/f...ns/127-0-0-1-b9768198-37ac-4906-af35-3d790b1f621a'"
p230
sS'postprocessing'
p231
S'[]'
p232
sS'menu'
p233
S"[(<lazyT 'Index'>, False, '/forca/default/index', []), (<lazyT 'Edit'>, False, '/admin/default/design/forca', [(<lazyT 'Controller'>, False, '/admin/default/edit/forca/controllers/default.py'), (<lazyT 'View'>, False, '/admin/default/edit/forca/views/default/index.html'), (<lazyT 'Layout'>, False, '/admin/default/edit/forca/views/layout.html'), (<lazyT 'Stylesheet'>, False, '/admin/default/edit/forca/static/base.css'), (<lazyT 'DB Model'>, False, '/admin/default/edit/forca/models/db.py'), (<lazyT 'Menu Model'>, False, '/admin/default/edit/forca/models/menu.py'), (<lazyT 'Database'>, False, '/forca/appadmin/index')])]"
p234
sS'_view_environment'
p235
S"{'A': <class 'gluon.html.A'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, 'DAL': <function DAL at 0x22df1b8>, ...}"
p236
sS'subtitle'
p237
S"<lazyT 'customize me!'>"
p238
sS'session_id_name'
p239
S"'session_id_forca'"
p240
sS'_custom_commit'
p241
S'None'
p242
sS'_caller'
p243
S'<function <lambda> at 0x377c5f0>'
p244
sS'files'
p245
S'[]'
p246
sS'view'
p247
S"'default/index.html'"
p248
ssS'locals'
p249
(dp250
S'sql_fields_aux'
p251
S"{'id': 'SERIAL PRIMARY KEY'}"
p252
sS'migrate'
p253
g160
sS'fields'
p254
S"['id SERIAL PRIMARY KEY']"
p255
sS'k'
S"'email'"
p256
sS'fake_migrate'
p257
g91
sS'field'
p258
S'<gluon.sql.Field object at 0x3888f90>'
p259
sS'ftype'
p260
S"'SERIAL PRIMARY KEY'"
p261
sS'sql_fields'
p262
S"{'id': 'SERIAL PRIMARY KEY'}"
p263
sS'self'
p264
S"<Table {'ALL': <gluon.sql.SQLALL object at 0x388...[], 'id': <gluon.sql.Field object at 0x38882d0>}>"
p265
sssS'traceback'
p266
S'Traceback (most recent call last):\n  File "/home/tiago/Desktop/web2py/web2py/gluon/restricted.py", line 186, in restricted\n    exec ccode in environment\n  File "/home/tiago/Desktop/web2py/web2py/applications/forca/models/models.py", line 19, in <module>\n    SQLField("password", "VARCHAR", length=64, default=None))\n  File "/home/tiago/Desktop/web2py/web2py/gluon/sql.py", line 1359, in define_table\n    t._create(migrate=migrate, fake_migrate=fake_migrate)\n  File "/home/tiago/Desktop/web2py/web2py/gluon/sql.py", line 1734, in _create\n    (field.type, field.name)\nSyntaxError: Field: unknown field type: VARCHAR for email\n'
p267
s.